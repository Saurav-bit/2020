
/*

#include <bits/stdc++.h>
using namespace std;
#define fastio                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(0);                       \
    cout.tie(0)

#define rep(i, n) for (int i = 0; i < n; i++)
const int N = 101;

int ar[N][N], I[N][N];

void mul(int A[][N], int I[][N], int dim)
{
    int res[dim+1][dim+1];

    rep(i, dim) 
    {
        rep(j, dim)
        {
            res[i][j]=0;
            rep(k, dim)
            {
                res[i][j] += A[i][k] * I[k][j];
                
            }
        }
    }

    rep(i,dim) {rep(j,dim) cout<<res[i][j]<<" ";cout<<endl;}
    rep(i,dim) rep(j,dim) A[i][j] = res[i][j];

}

void power(int A[][N], int dim, int n)
{

    rep(i, dim)
    {
        rep(j, dim)
        {
            if (i == j)
            {
                I[i][j] = 1;
            }
            else
            {
                I[i][j] = 0;
            }
        }
    }

    rep(i, n)
        mul(A, I, dim);

    rep(i, dim)
    {
        rep(j, dim)
        {
            cout << A[i][j] << " ";
        }
        cout << endl;
    }
}

int main()
{
    fastio;
    int t;
    cin >> t;

    while (t--)
    {
        int dim, n;
        cin >> dim >> n;

        rep(i, dim) rep(j, dim) { cin >> ar[i][j]; }

        power(ar, dim, n);
    }
    return 0;
}

*/

#include<bits/stdc++.h>
using namespace std;
#define fastio ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define rep(i,n) for(int i=2;i<=n;i++)
#define lli long long int
const int MOD=1e9+7;

lli power(lli a,lli n,lli mod){

    lli res=1;

    while(n){
        if(n%2==1){
            res=( (res%mod) * (a%mod) )%mod;
            n--;
        }
        else{
            a= ( (a%mod) + (a%mod) )%mod;
            n/=2;
        }
    }

    cout<<res<<endl;
    return res;

}

lli GCD(lli a,lli b,lli n){

    if(a==b){
        return ( power(a,n,MOD) + power(b,n,MOD) )%MOD;
    }

    lli num=abs(a-b);
    lli ans=1;

    for(lli i=2;i*i<=num;i++){
        if(num%i==0){
            lli temp=( power(a,n,i) + power(b,n,i) )%i;

            if(temp==0) ans=max(ans,i);

            temp=( power(a,n,num/i) + power(b,n,num/i) )%(num/i);
            if(temp==0) ans=max(ans,num/i);

        }
    }
    return ans%MOD;
}

int main(){
    fastio;

    int t;
    cin>>t;

    while(t--){
        lli a,b,n;
        cin>>a>>b>>n;
        cout<<GCD(a,b,n)<<endl;
    }
    return 0;
}
